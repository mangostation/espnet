# network architecture
# encoder related
elayers: 6
eunits: 2048

# decoder related
dlayers: 6
dunits: 2048
# attention related
adim: 256
aheads: 8

# hybrid CTC/attention
mtlalpha: 0.0

# label smoothing
lsm-weight: 0.1

# minibatch related
batch-size: 336
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 60 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 12
grad-clip: 5
patience: 0
epochs: 150
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-module: "espnet.nets.pytorch_backend.e2e_asr_ELMERASR_pretrain:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 1.0
transformer-warmup-steps: 12000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

# # conformer specific setting
# transformer-encoder-pos-enc-layer-type: rel_pos
# transformer-encoder-selfattn-layer-type: rel_selfattn
# transformer-encoder-activation-type: swish
# rel-pos-type: latest
# macaron-style: true
# use-cnn-module: true
# cnn-module-kernel: 15
